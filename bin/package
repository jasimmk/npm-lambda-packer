#!/bin/bash -e

main() {
  local env=()
  local output=""

  while [[ $# > 1 ]]; do
    key="$1"
    case $key in
        -o|--output)
        output="$2"
        shift # past argument
        ;;
        *)
        # unknown option
        ;;
    esac
    shift # past argument or value
  done

  # extract the package, which is the name up to the @
  local package="${1%@*}"

  # extract the version, which is everything after the last @
  local version="${1##*@}"

  # The package name with no paths
  local name=$(basename "${package}")

  local base=$(mktemp -d)
  local workdir="${base}/${name}-package"

  # Installing a package from GitHub and the filesystem works a bit differently.
  # The filesystem has a '/' at the start
  if [[ "${package}" =~ / ]]; then
    if [[ ! "${package}" =~ ^/ ]]; then
      package="${package}#${version}"
    fi
  else
    package="${package}@${version}"
  fi

  if [ -z "$output" ]; then
    output="$name.zip"
  fi
  # Normalize output path because we'll be changing directories
  output="$(pwd)/${output}"

  mkdir $workdir
  cd "$workdir"

  install_packages "$package"
  generate_entrypoint "$name"
  echo "Writing $output"
  package "$output"
}

install_packages() {
  npm init -y
  npm install --save "$1"
}

generate_entrypoint() {
  cat <<EOF > index.js
module.exports = require("$1");
EOF
}

package() {
  zip -r $1 *
}

main $@
